{
  "sqlc-embed": {
    "prefix": "sqlc-embed",
    "body": "sqlc.embed(${1:})",
    "description": "Embedding allows you to reuse existing model structs in more queries, resulting in less manual serialization work"
  },
  "sqlc-arg": {
    "prefix": "sqlc-arg",
    "body": "sqlc.arg(${1:})",
    "description": "Attach a name to a parameter in a SQL query. This macro expands to an engine-specific parameter placeholder. The name of the parameter is noted and used during code generation."
  },
  "sqlc-narg": {
    "prefix": "sqlc-narg",
    "body": "sqlc.narg(${1:})",
    "description": "The same as sqlc.arg, but always marks the parameter as nullable."
  },
  "sqlc-slice": {
    "prefix": "sqlc-slice",
    "body": "(sqlc.slice(${1:}))",
    "description": "For drivers that do not support passing slices to the IN operator, the sqlc.slice macro generates a dynamic query at runtime with the correct number of parameters."
  },
  "query-exec": {
    "prefix": "query-exec",
    "body": "-- name: ${1:} :exec",
    "description": "The generated method will return the error from ExecContext."
  },
  "query-execresult": {
    "prefix": "query-execresult",
    "body": "-- name: ${1:} :execresult",
    "description": "The generated method will return the sql.Result returned by ExecContext."
  },
  "query-execrows": {
    "prefix": "query-execrows",
    "body": "-- name: ${1:} :execrows",
    "description": "The generated method will return the number of affected rows from the result returned by ExecContext."
  },
  "query-execlastid": {
    "prefix": "query-execlastid",
    "body": "-- name: ${1:} :execlastid",
    "description": "The generated method will return the number generated by the database from the result returned by ExecContext."
  },
  "query-many": {
    "prefix": "query-many",
    "body": "-- name: ${1:} :many",
    "description": "The generated method will return a slice of records via QueryContext."
  },
  "query-one": {
    "prefix": "query-one",
    "body": "-- name: ${1:} :one",
    "description": "The generated method will return a single record via QueryRowContext."
  },
  "query-batchexec": {
    "prefix": "query-batchexec",
    "body": "-- name: ${1:} :batchexec",
    "description": "NOTE: This command only works with PostgreSQL using the pgx/v4 and pgx/v5 drivers and outputting Go code.\nThe generated method will return a batch object."
  },
  "query-batchmany": {
    "prefix": "query-batchmany",
    "body": "-- name: ${1:} :batchmany",
    "description": "NOTE: This command only works with PostgreSQL using the pgx/v4 and pgx/v5 drivers and outputting Go code.\nThe generated method will return a batch object."
  },
  "query-batchone": {
    "prefix": "query-batchone",
    "body": "-- name: ${1:} :batchone",
    "description": "NOTE: This command only works with PostgreSQL using the pgx/v4 and pgx/v5 drivers and outputting Go code.\nThe generated method will return a batch object. "
  }
}
